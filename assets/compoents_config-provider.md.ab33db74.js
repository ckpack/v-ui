import{_ as t,c as e,o as a,a as n}from"./app.1fd58a21.js";const v=JSON.parse('{"title":"config-provider","description":"","frontmatter":{},"headers":[{"level":2,"title":"用例","slug":"用例","link":"#用例","children":[]},{"level":2,"title":"config-provider 属性","slug":"config-provider-属性","link":"#config-provider-属性","children":[]},{"level":2,"title":"config-provider 插槽","slug":"config-provider-插槽","link":"#config-provider-插槽","children":[]}],"relativePath":"compoents/config-provider.md","lastUpdated":1671006314000}'),l={name:"compoents/config-provider.md"},o=n(`<h1 id="config-provider" tabindex="-1">config-provider <a class="header-anchor" href="#config-provider" aria-hidden="true">#</a></h1><p><code>config-provider</code> 被用来提供全局的配置选项，让你的配置能够在全局都能够被访问到，<code>config-provider</code> 使用了 <a href="https://v3.vuejs.org/guide/composition-api-provide-inject.html#reactivity" target="_blank" rel="noreferrer">Vue 的 provide/inject 特性</a></p><h2 id="用例" tabindex="-1">用例 <a class="header-anchor" href="#用例" aria-hidden="true">#</a></h2><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">v-config-provider</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">cls-prefix</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">t-</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">v-button</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">v-button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">v-config-provider</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="config-provider-属性" tabindex="-1">config-provider 属性 <a class="header-anchor" href="#config-provider-属性" aria-hidden="true">#</a></h2><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">说明</th><th style="text-align:left;">类型</th><th style="text-align:left;">可选值</th><th style="text-align:left;">默认值</th></tr></thead><tbody><tr><td style="text-align:left;">cls-prifix</td><td style="text-align:left;">组件类前缀</td><td style="text-align:left;">string</td><td style="text-align:left;">-</td><td style="text-align:left;">v-</td></tr></tbody></table><h2 id="config-provider-插槽" tabindex="-1">config-provider 插槽 <a class="header-anchor" href="#config-provider-插槽" aria-hidden="true">#</a></h2><table><thead><tr><th style="text-align:left;">插槽名</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">—</td><td style="text-align:left;">默认插槽</td></tr></tbody></table>`,8),s=[o];function r(i,p,c,d,h,f){return a(),e("div",null,s)}const y=t(l,[["render",r]]);export{v as __pageData,y as default};
